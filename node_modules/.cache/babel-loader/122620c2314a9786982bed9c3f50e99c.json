{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ranaa\\\\Downloads\\\\smart-notes-master\\\\smart-notes-master\\\\src\\\\pages\\\\UpdateCategory.js\",\n    _s = $RefreshSig$();\n\n// Libraries\nimport React, { useContext, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { ColorPicker } from \"material-ui-color\"; // App Context\n\nimport { AppContext } from \"../contexts/AppContext\"; // Material UI Components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Container, FormControl, FormLabel, IconButton, Slide, TextField, Typography } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\"; // Material UI Icons\n\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport CloseIcon from \"@material-ui/icons/Close\"; // Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateCategory = () => {\n  _s();\n\n  // Get State\n  const state = useContext(AppContext); // Location Hook\n\n  const location = useLocation(); // Get Category Attributes With ID From URL\n\n  let currentCategory = null;\n  state.categories.map(category => {\n    return category.id === location.pathname.split(\"/\", 3)[2] ? currentCategory = category : null;\n  }); // Component Local State\n\n  const [color, setColor] = useState(currentCategory !== null ? currentCategory.color : \"#fd4f4f\");\n  const [category, setCategory] = useState(currentCategory !== null ? currentCategory.name : \"\");\n  const [categoryErrorState, setCategoryErrorState] = useState(false);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [alertState, setAlertState] = useState(\"\");\n  const [alertMessage, setAlertMessage] = useState(\"\"); // Custom CSS Classes Style\n\n  const useStyles = makeStyles(theme => ({\n    field: {\n      marginTop: 20,\n      marginBottom: 20,\n      display: \"block\"\n    },\n    select: {\n      marginTop: 20,\n      marginBottom: 20\n    },\n    alertContainer: {\n      width: \"100%\",\n      \"& > * + *\": {\n        marginTop: theme.spacing(2)\n      }\n    },\n    alert: {\n      maxWidth: \"300px\",\n      position: \"absolute\",\n      top: 75,\n      right: 20,\n      backgroundColor: state.profile.theme === 'dark' ? alertState === 'success' ? '#495d49' : '#563a38' : ''\n    },\n    colorPickerContainer: {\n      marginTop: 20,\n      \"& button\": {\n        width: 60,\n        height: 30\n      },\n      \"& button div\": {\n        width: 55,\n        height: 25\n      }\n    },\n    addButton: {\n      marginTop: 25\n    },\n    EmptyMessage: {\n      textAlign: \"center\",\n      color: state.profile.theme === 'light' ? \"#c1c1c1\" : \"#606060\",\n      marginTop: \"calc((100vh - 65px) / 2)\",\n      transform: \"translateY(-50%)\"\n    }\n  })); // Classes Object\n\n  const classes = useStyles();\n\n  if (currentCategory !== null) {\n    // Handle Submit Form Method\n    const handleSubmit = e => {\n      // Prevent Default Action For Form Submission\n      e.preventDefault(); // Reset Error State\n\n      setCategoryErrorState(false); // Check If Note Field Empty\n\n      if (category === \"\") {\n        // Set Note Error For Empty\n        setCategoryErrorState(true); // Trigger Error Alert\n\n        triggerAlert(\"error\", \"Category Should Have a Name\");\n      } else {\n        // Assign This Category Notes To 'Not Categorized'\n        state.notes.map(note => {\n          // If Current Note Has The Same Deleted Category\n          if (note.category === currentCategory.name) {\n            // Update This Note Category To 'Not Categorized'\n            state.update(\"notes\", {\n              id: note.id,\n              title: note.title,\n              body: note.body,\n              category: category,\n              favourite: note.favourite\n            });\n          } // Return Nothing\n\n\n          return null;\n        }); // Trigger Success Alert\n\n        triggerAlert(\"success\", \"Category Edited Successfully\"); // Save Note To State\n\n        state.update(\"categories\", {\n          id: currentCategory.id,\n          name: category,\n          color: color\n        });\n      }\n    }; // Trigger Alert Method\n\n\n    const triggerAlert = (state, message) => {\n      // Set Alert State\n      setAlertState(state); // Set Alert Message\n\n      setAlertMessage(message); // Open Alert\n\n      setOpenAlert(true);\n    }; // Component View\n\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.field,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            color: \"primary\",\n            children: \"Category Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => setCategory(e.target.value),\n            value: category,\n            className: classes.field,\n            placeholder: \"Category Name\",\n            variant: \"outlined\",\n            color: \"primary\",\n            fullWidth: true,\n            required: true,\n            error: categoryErrorState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.field,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            color: \"primary\",\n            children: \"Category Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.colorPickerContainer,\n            children: /*#__PURE__*/_jsxDEV(ColorPicker, {\n              value: color,\n              hideTextfield: true,\n              onChange: color => setColor(`#${color.hex}`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          endIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this),\n          className: classes.addButton,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Slide, {\n        direction: \"left\",\n        in: openAlert,\n        mountOnEnter: true,\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          className: classes.alert,\n          severity: alertState,\n          action: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"close\",\n            color: \"inherit\",\n            size: \"small\",\n            onClick: () => setOpenAlert(false),\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n              fontSize: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 14\n          }, this),\n          children: alertMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 6\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      className: classes.EmptyMessage,\n      children: \"No Category With This ID (Stop Playing)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 6\n    }, this);\n  }\n};\n\n_s(UpdateCategory, \"m0T2IzhBs6cEDbWg0ieWuZFJbwM=\", true, function () {\n  return [useLocation];\n});\n\n_c = UpdateCategory;\nexport default UpdateCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateCategory\");","map":{"version":3,"sources":["C:/Users/ranaa/Downloads/smart-notes-master/smart-notes-master/src/pages/UpdateCategory.js"],"names":["React","useContext","useState","useLocation","ColorPicker","AppContext","makeStyles","Button","Container","FormControl","FormLabel","IconButton","Slide","TextField","Typography","Alert","KeyboardArrowRightIcon","CloseIcon","UpdateCategory","state","location","currentCategory","categories","map","category","id","pathname","split","color","setColor","setCategory","name","categoryErrorState","setCategoryErrorState","openAlert","setOpenAlert","alertState","setAlertState","alertMessage","setAlertMessage","useStyles","theme","field","marginTop","marginBottom","display","select","alertContainer","width","spacing","alert","maxWidth","position","top","right","backgroundColor","profile","colorPickerContainer","height","addButton","EmptyMessage","textAlign","transform","classes","handleSubmit","e","preventDefault","triggerAlert","notes","note","update","title","body","favourite","message","target","value","hex"],"mappings":"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","sourcesContent":["// Libraries\nimport React, {useContext, useState} from \"react\";\nimport {useLocation} from \"react-router-dom\";\nimport {ColorPicker} from \"material-ui-color\";\n\n// App Context\nimport {AppContext} from \"../contexts/AppContext\";\n\n// Material UI Components\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button, Container, FormControl, FormLabel, IconButton, Slide, TextField, Typography} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\n\n// Material UI Icons\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\n// Component\nconst UpdateCategory = () => {\n  // Get State\n  const state = useContext(AppContext);\n\n  // Location Hook\n  const location = useLocation();\n\n  // Get Category Attributes With ID From URL\n  let currentCategory = null;\n  state.categories.map(category => {\n    return category.id === location.pathname.split(\"/\", 3)[2] ? (currentCategory = category) : null;\n  });\n\n  // Component Local State\n  const [color, setColor] = useState(currentCategory !== null ? currentCategory.color : \"#fd4f4f\");\n  const [category, setCategory] = useState(currentCategory !== null ? currentCategory.name : \"\");\n  const [categoryErrorState, setCategoryErrorState] = useState(false);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [alertState, setAlertState] = useState(\"\");\n  const [alertMessage, setAlertMessage] = useState(\"\");\n\n  // Custom CSS Classes Style\n  const useStyles = makeStyles(theme => ({\n      field: {\n        marginTop: 20,\n        marginBottom: 20,\n        display: \"block\"\n      },\n      select: {\n        marginTop: 20,\n        marginBottom: 20\n      },\n      alertContainer: {\n        width: \"100%\",\n        \"& > * + *\": {\n          marginTop: theme.spacing(2)\n        }\n      },\n      alert: {\n        maxWidth: \"300px\",\n        position: \"absolute\",\n        top: 75,\n        right: 20,\n        backgroundColor: state.profile.theme === 'dark' ? (alertState === 'success' ? '#495d49' : '#563a38') : ''\n      },\n      colorPickerContainer: {\n        marginTop: 20,\n        \"& button\": {\n          width: 60,\n          height: 30\n        },\n        \"& button div\": {\n          width: 55,\n          height: 25\n        }\n      },\n      addButton: {\n        marginTop: 25\n      },\n      EmptyMessage: {\n        textAlign: \"center\",\n        color: state.profile.theme === 'light' ? \"#c1c1c1\" : \"#606060\",\n        marginTop: \"calc((100vh - 65px) / 2)\",\n        transform: \"translateY(-50%)\"\n      }\n    }\n  ));\n\n  // Classes Object\n  const classes = useStyles();\n\n if(currentCategory !== null ) {\n   // Handle Submit Form Method\n   const handleSubmit = (e) => {\n     // Prevent Default Action For Form Submission\n     e.preventDefault();\n     // Reset Error State\n     setCategoryErrorState(false);\n     // Check If Note Field Empty\n     if (category === \"\") {\n       // Set Note Error For Empty\n       setCategoryErrorState(true);\n       // Trigger Error Alert\n       triggerAlert(\"error\", \"Category Should Have a Name\");\n     } else {\n       // Assign This Category Notes To 'Not Categorized'\n       state.notes.map(note => {\n         // If Current Note Has The Same Deleted Category\n         if (note.category === currentCategory.name) {\n           // Update This Note Category To 'Not Categorized'\n           state.update(\"notes\", {\n             id: note.id,\n             title: note.title,\n             body: note.body,\n             category: category,\n             favourite: note.favourite\n           });\n         }\n         // Return Nothing\n         return null;\n       })\n       // Trigger Success Alert\n       triggerAlert(\"success\", \"Category Edited Successfully\");\n       // Save Note To State\n       state.update(\"categories\", {\n         id: currentCategory.id,\n         name: category,\n         color: color\n       });\n     }\n   };\n\n   // Trigger Alert Method\n   const triggerAlert = (state, message) => {\n     // Set Alert State\n     setAlertState(state);\n     // Set Alert Message\n     setAlertMessage(message);\n     // Open Alert\n     setOpenAlert(true);\n   };\n\n   // Component View\n   return (\n     <Container>\n       <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n         <FormControl className={classes.field}>\n           <FormLabel color=\"primary\">Category Name</FormLabel>\n           <TextField\n             onChange={(e) => setCategory(e.target.value)}\n             value={category}\n             className={classes.field}\n             placeholder=\"Category Name\"\n             variant=\"outlined\"\n             color=\"primary\"\n             fullWidth\n             required\n             error={categoryErrorState}\n           />\n         </FormControl>\n         <FormControl className={classes.field}>\n           <FormLabel color=\"primary\">Category Color</FormLabel>\n           <div className={classes.colorPickerContainer}>\n             <ColorPicker value={color} hideTextfield onChange={(color) => setColor(`#${color.hex}`)} />\n           </div>\n         </FormControl>\n         <Button\n           variant=\"contained\"\n           color=\"primary\"\n           type=\"submit\"\n           endIcon={<KeyboardArrowRightIcon />}\n           className={classes.addButton}\n         >\n           Edit\n         </Button>\n       </form>\n       <Slide direction=\"left\" in={openAlert} mountOnEnter unmountOnExit>\n         <Alert\n           className={classes.alert}\n           severity={alertState}\n           action={\n             <IconButton\n               aria-label=\"close\"\n               color=\"inherit\"\n               size=\"small\"\n               onClick={() => setOpenAlert(false)}\n             >\n               <CloseIcon fontSize=\"inherit\" />\n             </IconButton>\n           }\n         >\n           {alertMessage}\n         </Alert>\n       </Slide>\n     </Container>\n   );\n } else {\n   return (\n     <Typography variant=\"h5\"\n                 component=\"h2\"\n                 className={classes.EmptyMessage}\n     >\n       No Category With This ID (Stop Playing)\n     </Typography>\n   )\n }\n};\n\nexport default UpdateCategory;\n"]},"metadata":{},"sourceType":"module"}