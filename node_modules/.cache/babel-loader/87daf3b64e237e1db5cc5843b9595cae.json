{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ranaa\\\\Downloads\\\\smart-notes-master\\\\smart-notes-master\\\\src\\\\pages\\\\CreateCategory.js\",\n    _s = $RefreshSig$();\n\n// Libraries\nimport React, { useContext, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ColorPicker } from \"material-ui-color\"; // App Context\n\nimport { AppContext } from \"../contexts/AppContext\"; // Material UI Components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Container, FormControl, FormLabel, IconButton, Slide, TextField } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\"; // Material UI Icons\n\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport CloseIcon from \"@material-ui/icons/Close\"; // Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateCategory = () => {\n  _s();\n\n  // Get State\n  const state = useContext(AppContext); // Component Local State\n\n  const [color, setColor] = useState(\"#8a8a8a\");\n  const [category, setCategory] = useState(\"\");\n  const [categoryErrorState, setCategoryErrorState] = useState(false);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [alertState, setAlertState] = useState(\"\");\n  const [alertMessage, setAlertMessage] = useState(\"\"); // Custom CSS Classes Style\n\n  const useStyles = makeStyles(theme => ({\n    field: {\n      marginTop: 20,\n      marginBottom: 20,\n      display: \"block\"\n    },\n    select: {\n      marginTop: 20,\n      marginBottom: 20\n    },\n    alertContainer: {\n      width: \"100%\",\n      \"& > * + *\": {\n        marginTop: theme.spacing(2)\n      }\n    },\n    alert: {\n      maxWidth: \"300px\",\n      position: \"absolute\",\n      top: 75,\n      right: 20,\n      backgroundColor: state.profile.theme === 'dark' ? alertState === 'success' ? '#495d49' : '#563a38' : ''\n    },\n    colorPickerContainer: {\n      marginTop: 20,\n      \"& button\": {\n        width: 60,\n        height: 30\n      },\n      \"& button div\": {\n        width: 55,\n        height: 25\n      }\n    },\n    addButton: {\n      marginTop: 25\n    }\n  })); // Classes Object\n\n  const classes = useStyles(); // Handle Submit Form Method\n\n  const handleSubmit = e => {\n    // Prevent Default Action For Form Submission\n    e.preventDefault(); // Reset Error State\n\n    setCategoryErrorState(false); // Check If Note Field Empty\n\n    if (category === \"\") {\n      // Set Note Error For Empty\n      setCategoryErrorState(true); // Trigger Error Alert\n\n      triggerAlert(\"error\", \"Category Should Have a Name\");\n    } else {\n      // Trigger Success Alert\n      triggerAlert(\"success\", \"Category Saved Successfully\"); // Save Note To State\n\n      state.add(\"categories\", {\n        id: uuidv4(),\n        name: category.trim(),\n        color: color\n      }); // Empty Fields\n\n      setCategory(\"\");\n    }\n  }; // Trigger Alert Method\n\n\n  const triggerAlert = (state, message) => {\n    // Set Alert State\n    setAlertState(state); // Set Alert Message\n\n    setAlertMessage(message); // Open Alert\n\n    setOpenAlert(true);\n  }; // Component View\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.field,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          color: \"primary\",\n          children: \"Category Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setCategory(e.target.value),\n          value: category,\n          className: classes.field,\n          placeholder: \"Category Name\",\n          variant: \"outlined\",\n          color: \"primary\",\n          fullWidth: true,\n          required: true,\n          error: categoryErrorState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.field,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          color: \"primary\",\n          children: \"Category Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.colorPickerContainer,\n          children: /*#__PURE__*/_jsxDEV(ColorPicker, {\n            value: color,\n            hideTextfield: true,\n            onChange: color => setColor(`#${color.hex}`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        endIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowRightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 20\n        }, this),\n        className: classes.addButton,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"left\",\n      in: openAlert,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        className: classes.alert,\n        severity: alertState,\n        action: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          size: \"small\",\n          onClick: () => setOpenAlert(false),\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this),\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateCategory, \"g+bMZrbHU5nMpQBM1yxnxyW1wuE=\", true);\n\n_c = CreateCategory;\nexport default CreateCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCategory\");","map":{"version":3,"sources":["C:/Users/ranaa/Downloads/smart-notes-master/smart-notes-master/src/pages/CreateCategory.js"],"names":["React","useContext","useState","v4","uuidv4","ColorPicker","AppContext","makeStyles","Button","Container","FormControl","FormLabel","IconButton","Slide","TextField","Alert","KeyboardArrowRightIcon","CloseIcon","CreateCategory","state","color","setColor","category","setCategory","categoryErrorState","setCategoryErrorState","openAlert","setOpenAlert","alertState","setAlertState","alertMessage","setAlertMessage","useStyles","theme","field","marginTop","marginBottom","display","select","alertContainer","width","spacing","alert","maxWidth","position","top","right","backgroundColor","profile","colorPickerContainer","height","addButton","classes","handleSubmit","e","preventDefault","triggerAlert","add","id","name","trim","message","target","value","hex"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;AACA,SAAQC,WAAR,QAA0B,mBAA1B,C,CAEA;;AACA,SAAQC,UAAR,QAAyB,wBAAzB,C,CAEA;;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,SAAxC,EAAmDC,UAAnD,EAA+DC,KAA/D,EAAsEC,SAAtE,QAAsF,mBAAtF;AACA,SAAQC,KAAR,QAAoB,kBAApB,C,CAEA;;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,OAAOC,SAAP,MAAsB,0BAAtB,C,CAEA;;;;AACA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B;AACA,QAAMC,KAAK,GAAGlB,UAAU,CAACK,UAAD,CAAxB,CAF2B,CAI3B;;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,SAAD,CAAlC;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsB,kBAAD,EAAqBC,qBAArB,IAA8CvB,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACwB,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC0B,UAAD,EAAaC,aAAb,IAA8B3B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC4B,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAAC,EAAD,CAAhD,CAV2B,CAY3B;;AACA,QAAM8B,SAAS,GAAGzB,UAAU,CAAC0B,KAAK,KAAK;AACnCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,EADN;AAELC,MAAAA,YAAY,EAAE,EAFT;AAGLC,MAAAA,OAAO,EAAE;AAHJ,KAD4B;AAMnCC,IAAAA,MAAM,EAAE;AACNH,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,YAAY,EAAE;AAFR,KAN2B;AAUnCG,IAAAA,cAAc,EAAE;AACdC,MAAAA,KAAK,EAAE,MADO;AAEd,mBAAa;AACXL,QAAAA,SAAS,EAAEF,KAAK,CAACQ,OAAN,CAAc,CAAd;AADA;AAFC,KAVmB;AAgBnCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,OADL;AAELC,MAAAA,QAAQ,EAAE,UAFL;AAGLC,MAAAA,GAAG,EAAE,EAHA;AAILC,MAAAA,KAAK,EAAE,EAJF;AAKLC,MAAAA,eAAe,EAAE5B,KAAK,CAAC6B,OAAN,CAAcf,KAAd,KAAwB,MAAxB,GAAkCL,UAAU,KAAK,SAAf,GAA2B,SAA3B,GAAuC,SAAzE,GAAsF;AALlG,KAhB4B;AAuBnCqB,IAAAA,oBAAoB,EAAE;AACpBd,MAAAA,SAAS,EAAE,EADS;AAEpB,kBAAY;AACVK,QAAAA,KAAK,EAAE,EADG;AAEVU,QAAAA,MAAM,EAAE;AAFE,OAFQ;AAMpB,sBAAgB;AACdV,QAAAA,KAAK,EAAE,EADO;AAEdU,QAAAA,MAAM,EAAE;AAFM;AANI,KAvBa;AAkCnCC,IAAAA,SAAS,EAAE;AACThB,MAAAA,SAAS,EAAE;AADF;AAlCwB,GAAL,CAAN,CAA5B,CAb2B,CAqD3B;;AACA,QAAMiB,OAAO,GAAGpB,SAAS,EAAzB,CAtD2B,CAwD3B;;AACA,QAAMqB,YAAY,GAAIC,CAAD,IAAO;AAC1B;AACAA,IAAAA,CAAC,CAACC,cAAF,GAF0B,CAG1B;;AACA9B,IAAAA,qBAAqB,CAAC,KAAD,CAArB,CAJ0B,CAK1B;;AACA,QAAIH,QAAQ,KAAK,EAAjB,EAAqB;AACnB;AACAG,MAAAA,qBAAqB,CAAC,IAAD,CAArB,CAFmB,CAGnB;;AACA+B,MAAAA,YAAY,CAAC,OAAD,EAAU,6BAAV,CAAZ;AACD,KALD,MAKO;AACL;AACAA,MAAAA,YAAY,CAAC,SAAD,EAAY,6BAAZ,CAAZ,CAFK,CAGL;;AACArC,MAAAA,KAAK,CAACsC,GAAN,CAAU,YAAV,EAAwB;AACtBC,QAAAA,EAAE,EAAEtD,MAAM,EADY;AAEtBuD,QAAAA,IAAI,EAAErC,QAAQ,CAACsC,IAAT,EAFgB;AAGtBxC,QAAAA,KAAK,EAAEA;AAHe,OAAxB,EAJK,CASL;;AACAG,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,GAvBD,CAzD2B,CAkF3B;;;AACA,QAAMiC,YAAY,GAAG,CAACrC,KAAD,EAAQ0C,OAAR,KAAoB;AACvC;AACAhC,IAAAA,aAAa,CAACV,KAAD,CAAb,CAFuC,CAGvC;;AACAY,IAAAA,eAAe,CAAC8B,OAAD,CAAf,CAJuC,CAKvC;;AACAlC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAPD,CAnF2B,CA4F3B;;;AACA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,YAAY,EAAC,KAA9B;AAAoC,MAAA,QAAQ,EAAE0B,YAA9C;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAED,OAAO,CAAClB,KAAhC;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AACE,UAAA,QAAQ,EAAGoB,CAAD,IAAO/B,WAAW,CAAC+B,CAAC,CAACQ,MAAF,CAASC,KAAV,CAD9B;AAEE,UAAA,KAAK,EAAEzC,QAFT;AAGE,UAAA,SAAS,EAAE8B,OAAO,CAAClB,KAHrB;AAIE,UAAA,WAAW,EAAC,eAJd;AAKE,UAAA,OAAO,EAAC,UALV;AAME,UAAA,KAAK,EAAC,SANR;AAOE,UAAA,SAAS,MAPX;AAQE,UAAA,QAAQ,MARV;AASE,UAAA,KAAK,EAAEV;AATT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAE4B,OAAO,CAAClB,KAAhC;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAEkB,OAAO,CAACH,oBAAxB;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,KAAK,EAAE7B,KAApB;AAA2B,YAAA,aAAa,MAAxC;AAAyC,YAAA,QAAQ,EAAGA,KAAD,IAAWC,QAAQ,CAAE,IAAGD,KAAK,CAAC4C,GAAI,EAAf;AAAtE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAqBE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,OAAO,eAAE,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA,gBAJX;AAKE,QAAA,SAAS,EAAEZ,OAAO,CAACD,SALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgCE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAwB,MAAA,EAAE,EAAEzB,SAA5B;AAAuC,MAAA,YAAY,MAAnD;AAAoD,MAAA,aAAa,MAAjE;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,SAAS,EAAE0B,OAAO,CAACV,KADrB;AAEE,QAAA,QAAQ,EAAEd,UAFZ;AAGE,QAAA,MAAM,eACJ,QAAC,UAAD;AACE,wBAAW,OADb;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,OAAO,EAAE,MAAMD,YAAY,CAAC,KAAD,CAJ7B;AAAA,iCAME,QAAC,SAAD;AAAW,YAAA,QAAQ,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,kBAcGG;AAdH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD,CAlJD;;GAAMZ,c;;KAAAA,c;AAoJN,eAAeA,cAAf","sourcesContent":["// Libraries\nimport React, {useContext, useState} from \"react\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {ColorPicker} from \"material-ui-color\";\n\n// App Context\nimport {AppContext} from \"../contexts/AppContext\";\n\n// Material UI Components\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button, Container, FormControl, FormLabel, IconButton, Slide, TextField} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\n\n// Material UI Icons\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\n// Component\nconst CreateCategory = () => {\n  // Get State\n  const state = useContext(AppContext);\n\n  // Component Local State\n  const [color, setColor] = useState(\"#8a8a8a\");\n  const [category, setCategory] = useState(\"\");\n  const [categoryErrorState, setCategoryErrorState] = useState(false);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [alertState, setAlertState] = useState(\"\");\n  const [alertMessage, setAlertMessage] = useState(\"\");\n\n  // Custom CSS Classes Style\n  const useStyles = makeStyles(theme => ({\n      field: {\n        marginTop: 20,\n        marginBottom: 20,\n        display: \"block\"\n      },\n      select: {\n        marginTop: 20,\n        marginBottom: 20\n      },\n      alertContainer: {\n        width: \"100%\",\n        \"& > * + *\": {\n          marginTop: theme.spacing(2)\n        }\n      },\n      alert: {\n        maxWidth: \"300px\",\n        position: \"absolute\",\n        top: 75,\n        right: 20,\n        backgroundColor: state.profile.theme === 'dark' ? (alertState === 'success' ? '#495d49' : '#563a38') : ''\n      },\n      colorPickerContainer: {\n        marginTop: 20,\n        \"& button\": {\n          width: 60,\n          height: 30\n        },\n        \"& button div\": {\n          width: 55,\n          height: 25\n        }\n      },\n      addButton: {\n        marginTop: 25\n      }\n    }\n  ));\n\n  // Classes Object\n  const classes = useStyles();\n\n  // Handle Submit Form Method\n  const handleSubmit = (e) => {\n    // Prevent Default Action For Form Submission\n    e.preventDefault();\n    // Reset Error State\n    setCategoryErrorState(false);\n    // Check If Note Field Empty\n    if (category === \"\") {\n      // Set Note Error For Empty\n      setCategoryErrorState(true);\n      // Trigger Error Alert\n      triggerAlert(\"error\", \"Category Should Have a Name\");\n    } else {\n      // Trigger Success Alert\n      triggerAlert(\"success\", \"Category Saved Successfully\");\n      // Save Note To State\n      state.add(\"categories\", {\n        id: uuidv4(),\n        name: category.trim(),\n        color: color\n      });\n      // Empty Fields\n      setCategory(\"\");\n    }\n  };\n\n  // Trigger Alert Method\n  const triggerAlert = (state, message) => {\n    // Set Alert State\n    setAlertState(state);\n    // Set Alert Message\n    setAlertMessage(message);\n    // Open Alert\n    setOpenAlert(true);\n  };\n\n  // Component View\n  return (\n    <Container>\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <FormControl className={classes.field}>\n          <FormLabel color=\"primary\">Category Name</FormLabel>\n          <TextField\n            onChange={(e) => setCategory(e.target.value)}\n            value={category}\n            className={classes.field}\n            placeholder=\"Category Name\"\n            variant=\"outlined\"\n            color=\"primary\"\n            fullWidth\n            required\n            error={categoryErrorState}\n          />\n        </FormControl>\n        <FormControl className={classes.field}>\n          <FormLabel color=\"primary\">Category Color</FormLabel>\n          <div className={classes.colorPickerContainer}>\n            <ColorPicker value={color} hideTextfield onChange={(color) => setColor(`#${color.hex}`)} />\n          </div>\n        </FormControl>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          endIcon={<KeyboardArrowRightIcon />}\n          className={classes.addButton}\n        >\n          Add\n        </Button>\n      </form>\n      <Slide direction=\"left\" in={openAlert} mountOnEnter unmountOnExit>\n        <Alert\n          className={classes.alert}\n          severity={alertState}\n          action={\n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={() => setOpenAlert(false)}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n        >\n          {alertMessage}\n        </Alert>\n      </Slide>\n    </Container>\n  );\n};\n\nexport default CreateCategory;\n"]},"metadata":{},"sourceType":"module"}