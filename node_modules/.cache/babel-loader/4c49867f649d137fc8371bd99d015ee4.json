{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ranaa\\\\Downloads\\\\smart-notes-master\\\\smart-notes-master\\\\src\\\\contexts\\\\AppContext.js\";\n// Libraries\nimport React, { createContext } from \"react\";\nimport { getItem, setItem } from \"../helpers/Localstorage\"; // App Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext(); // App Context Provider\n\nclass AppContextProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.initialState = {\n      profile: {\n        avatar: `${process.env.PUBLIC_URL}/images/guest.jpg`,\n        username: \"Guest\",\n        theme: \"light\"\n      },\n      categories: [{\n        id: \"0\",\n        name: \"Not Categorized\",\n        color: \"#dedede\"\n      }],\n      notes: []\n    };\n    this.state = getItem(\"ENotes\") === null ? this.initialState : JSON.parse(getItem(\"ENots\"));\n\n    this.add = async (property, content) => {\n      // Add Property Value To State\n      await this.setState({\n        [property]: [...this.state[property], content]\n      }); // Save To Localstorage\n\n      setItem(\"SmartNotes\", JSON.stringify(this.state));\n    };\n\n    this.update = async (property, content) => {\n      // Temp Array To Store Updated Property\n      const temp = []; // Loop Through Property\n\n      await this.state[property].map(current => {\n        // Check For Required Property To Be Updated\n        if (current.id !== content.id) {\n          // Push The Current Property\n          temp.push(current);\n        } else {\n          // Push Updated Property\n          temp.push(content);\n        } // Return Nothing\n\n\n        return null;\n      }); // Update Property State\n\n      await this.setState({\n        [property]: temp\n      }); // Save To Localstorage\n\n      setItem(\"ENotes\", JSON.stringify(this.state));\n    };\n\n    this.remove = async (property, id) => {\n      // Remove Property With This ID\n      await this.setState({\n        [property]: this.state[property].filter(current => current.id !== id)\n      }); // Save To Localstorage\n\n      setItem(\"ENotes\", JSON.stringify(this.state));\n    };\n\n    this.clearAll = async property => {\n      if (property === \"notes\") {\n        // Set Notes To Initial Value\n        await this.setState({\n          notes: []\n        });\n      } else {\n        // Set Categories To Initial Value\n        await this.setState({\n          categories: [{\n            id: \"0\",\n            name: \"Not Categorized\",\n            color: this.state.profile.theme === \"light\" ? \"#dedede\" : \"#323232\"\n          }]\n        });\n      } // Save To Localstorage\n\n\n      setItem(\"ENotes\", JSON.stringify(this.state));\n    };\n\n    this.updateAllNotes = async content => {\n      // Update All Notes\n      await this.setState({\n        notes: content\n      }); // Save To Localstorage\n\n      setItem(\"ENotes\", JSON.stringify(this.state));\n    };\n\n    this.updateProfile = async profile => {\n      // Add New Profile Data To State\n      await this.setState({\n        profile: profile\n      }); // Check To Add Alert Dark Theme\n\n      if (profile.theme === \"dark\") {\n        // Create Link\n        let link = document.createElement(\"link\"); // Add Link Attributes\n\n        link.setAttribute(\"id\", \"SweetAlertDarkStyle\");\n        link.setAttribute(\"rel\", \"stylesheet\");\n        link.setAttribute(\"href\", `${process.env.PUBLIC_URL}/dark.min.css`); // Append Link To Head Element\n\n        document.documentElement.firstChild.appendChild(link);\n      } else {\n        // Check To Remove Alert Dark Theme\n        if (document.getElementById(\"SweetAlertDarkStyle\") !== null) {\n          document.getElementById(\"SweetAlertDarkStyle\").remove();\n        }\n      } // Save To Localstorage\n\n\n      setItem(\"ENOtes\", JSON.stringify(this.state));\n    };\n\n    this.exportData = async () => await JSON.stringify(this.state);\n\n    this.importData = async state => {\n      // Assign Data To State\n      await this.setState(JSON.parse(state)); // Save To Localstorage\n\n      setItem(\"ENotes\", JSON.stringify(this.state));\n    };\n\n    this.restore = async () => {\n      // Assign Initial State To State\n      await this.setState(this.initialState); // Check To Remove Alert Dark Theme\n\n      if (document.getElementById(\"SweetAlertDarkStyle\") !== null) {\n        document.getElementById(\"SweetAlertDarkStyle\").remove();\n      } // Save To Localstorage\n\n\n      setItem(\"ENotes\", JSON.stringify(this.state));\n    };\n  }\n\n  // After Component Loaded\n  componentDidMount() {\n    // Check To Add Alert Dark Theme\n    if (this.state.profile.theme === \"dark\" && document.getElementById(\"SweetAlertDarkStyle\") === null) {\n      // Create Link\n      let link = document.createElement(\"link\"); // Add Link Attributes\n\n      link.setAttribute(\"id\", \"SweetAlertDarkStyle\");\n      link.setAttribute(\"rel\", \"stylesheet\");\n      link.setAttribute(\"href\", `${process.env.PUBLIC_URL}/dark.min.css`); // Append Link To Head Element\n\n      document.documentElement.firstChild.appendChild(link);\n    } else {\n      // Check To Remove Alert Dark Theme\n      if (document.getElementById(\"SweetAlertDarkStyle\") !== null) {\n        document.getElementById(\"SweetAlertDarkStyle\").remove();\n      }\n    }\n  } // Add Method\n\n\n  // Render Method\n  render() {\n    // App Context Provider\n    return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: { ...this.state,\n        add: this.add,\n        update: this.update,\n        remove: this.remove,\n        clearAll: this.clearAll,\n        updateProfile: this.updateProfile,\n        updateAllNotes: this.updateAllNotes,\n        exportData: this.exportData,\n        importData: this.importData,\n        restore: this.restore\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Export App Context Provider\n\n\nexport default AppContextProvider;","map":{"version":3,"sources":["C:/Users/ranaa/Downloads/smart-notes-master/smart-notes-master/src/contexts/AppContext.js"],"names":["React","createContext","getItem","setItem","AppContext","AppContextProvider","Component","initialState","profile","avatar","process","env","PUBLIC_URL","username","theme","categories","id","name","color","notes","state","JSON","parse","add","property","content","setState","stringify","update","temp","map","current","push","remove","filter","clearAll","updateAllNotes","updateProfile","link","document","createElement","setAttribute","documentElement","firstChild","appendChild","getElementById","exportData","importData","restore","componentDidMount","render","props","children"],"mappings":"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","sourcesContent":["// Libraries\nimport React, {createContext} from \"react\";\nimport {getItem, setItem} from \"../helpers/Localstorage\";\n\n// App Context\nexport const AppContext = createContext();\n\n// App Context Provider\nclass AppContextProvider extends React.Component {\n  // Initial App State\n  initialState = {\n    profile: {\n      avatar: `${process.env.PUBLIC_URL}/images/guest.jpg`,\n      username: \"Guest\",\n      theme: \"light\"\n    },\n    categories: [\n      {\n        id: \"0\",\n        name: \"Not Categorized\",\n        color: \"#dedede\"\n      }\n    ],\n    notes: []\n  };\n\n  // App State\n  state = getItem(\"ENotes\") === null ? this.initialState : JSON.parse(getItem(\"ENots\"));\n\n  // After Component Loaded\n  componentDidMount() {\n    // Check To Add Alert Dark Theme\n    if (this.state.profile.theme === \"dark\" && document.getElementById(\"SweetAlertDarkStyle\") === null) {\n      // Create Link\n      let link = document.createElement(\"link\");\n      // Add Link Attributes\n      link.setAttribute(\"id\", \"SweetAlertDarkStyle\");\n      link.setAttribute(\"rel\", \"stylesheet\");\n      link.setAttribute(\"href\", `${process.env.PUBLIC_URL}/dark.min.css`);\n      // Append Link To Head Element\n      document.documentElement.firstChild.appendChild(link);\n    } else {\n      // Check To Remove Alert Dark Theme\n      if (document.getElementById(\"SweetAlertDarkStyle\") !== null) {\n        document.getElementById(\"SweetAlertDarkStyle\").remove();\n      }\n    }\n  }\n\n  // Add Method\n  add = async (property, content) => {\n    // Add Property Value To State\n    await this.setState({\n      [property]: [...this.state[property], content]\n    });\n    // Save To Localstorage\n    setItem(\"SmartNotes\", JSON.stringify(this.state));\n  };\n\n  // Update Method\n  update = async (property, content) => {\n    // Temp Array To Store Updated Property\n    const temp = [];\n    // Loop Through Property\n    await this.state[property].map(current => {\n      // Check For Required Property To Be Updated\n      if (current.id !== content.id) {\n        // Push The Current Property\n        temp.push(current);\n      } else {\n        // Push Updated Property\n        temp.push(content);\n      }\n      // Return Nothing\n      return null;\n    });\n    // Update Property State\n    await this.setState({\n      [property]: temp\n    });\n    // Save To Localstorage\n    setItem(\"ENotes\", JSON.stringify(this.state));\n  };\n\n  // Remove Method\n  remove = async (property, id) => {\n    // Remove Property With This ID\n    await this.setState({\n      [property]: this.state[property].filter(current => current.id !== id)\n    });\n    // Save To Localstorage\n    setItem(\"ENotes\", JSON.stringify(this.state));\n  };\n\n  // Clear All Method\n  clearAll = async (property) => {\n    if (property === \"notes\") {\n      // Set Notes To Initial Value\n      await this.setState({\n        notes: []\n      });\n    } else {\n      // Set Categories To Initial Value\n      await this.setState({\n        categories: [\n          {\n            id: \"0\",\n            name: \"Not Categorized\",\n            color: this.state.profile.theme === \"light\" ? \"#dedede\" : \"#323232\"\n          }\n        ]\n      });\n    }\n    // Save To Localstorage\n    setItem(\"ENotes\", JSON.stringify(this.state));\n  };\n\n  // Update All Notes Method\n  updateAllNotes = async (content) => {\n    // Update All Notes\n    await this.setState({\n      notes: content\n    });\n    // Save To Localstorage\n    setItem(\"ENotes\", JSON.stringify(this.state));\n  };\n\n  // Update Profile Method\n  updateProfile = async (profile) => {\n    // Add New Profile Data To State\n    await this.setState({\n      profile: profile\n    });\n    // Check To Add Alert Dark Theme\n    if (profile.theme === \"dark\") {\n      // Create Link\n      let link = document.createElement(\"link\");\n      // Add Link Attributes\n      link.setAttribute(\"id\", \"SweetAlertDarkStyle\");\n      link.setAttribute(\"rel\", \"stylesheet\");\n      link.setAttribute(\"href\", `${process.env.PUBLIC_URL}/dark.min.css`);\n      // Append Link To Head Element\n      document.documentElement.firstChild.appendChild(link);\n    } else {\n      // Check To Remove Alert Dark Theme\n      if (document.getElementById(\"SweetAlertDarkStyle\") !== null) {\n        document.getElementById(\"SweetAlertDarkStyle\").remove();\n      }\n    }\n    // Save To Localstorage\n    setItem(\"ENOtes\", JSON.stringify(this.state));\n  };\n\n  // Export State (Data) Method\n  exportData = async () => await JSON.stringify(this.state);\n\n  // Import State (Data) Method\n  importData = async (state) => {\n    // Assign Data To State\n    await this.setState(JSON.parse(state));\n    // Save To Localstorage\n    setItem(\"ENotes\", JSON.stringify(this.state));\n  };\n\n  // Restore Method\n  restore = async () => {\n    // Assign Initial State To State\n    await this.setState(this.initialState);\n    // Check To Remove Alert Dark Theme\n    if (document.getElementById(\"SweetAlertDarkStyle\") !== null) {\n      document.getElementById(\"SweetAlertDarkStyle\").remove();\n    }\n    // Save To Localstorage\n    setItem(\"ENotes\", JSON.stringify(this.state));\n  };\n\n  // Render Method\n  render() {\n    // App Context Provider\n    return (\n      <AppContext.Provider value={{\n        ...this.state,\n        add: this.add,\n        update: this.update,\n        remove: this.remove,\n        clearAll: this.clearAll,\n        updateProfile: this.updateProfile,\n        updateAllNotes: this.updateAllNotes,\n        exportData: this.exportData,\n        importData: this.importData,\n        restore: this.restore\n      }}>\n        {this.props.children}\n      </AppContext.Provider>\n    );\n  }\n}\n\n// Export App Context Provider\nexport default AppContextProvider;\n"]},"metadata":{},"sourceType":"module"}