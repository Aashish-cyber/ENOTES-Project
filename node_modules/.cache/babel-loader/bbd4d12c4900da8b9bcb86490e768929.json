{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ranaa\\\\Downloads\\\\smart-notes-master\\\\smart-notes-master\\\\src\\\\pages\\\\Categories.js\",\n    _s = $RefreshSig$();\n\n// Libraries\nimport React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\"; // Material UI Components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\"; // Material UI Icons\n\nimport { Container, IconButton, Typography } from \"@material-ui/core\";\nimport { Delete, Edit } from \"@material-ui/icons\"; // App Context\n\nimport { AppContext } from \"../contexts/AppContext\"; // Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Categories = () => {\n  _s();\n\n  // Get Notes & Its Methods\n  const state = useContext(AppContext); // Custom CSS Classes Style\n\n  const useStyles = makeStyles({\n    tableContainer: {\n      marginTop: 20\n    },\n    tableHead: {\n      backgroundColor: state.profile.theme === \"light\" ? \"#3f51b5\" : \"#545454\",\n      \"& > tr th\": {\n        fontSize: 16,\n        color: \"#ffffff\"\n      }\n    },\n    categoryColorContainer: {\n      display: \"inline-block\",\n      padding: 2,\n      borderRadius: \"50%\"\n    },\n    categoryColor: {\n      width: 30,\n      height: 30,\n      display: \"block\",\n      borderRadius: \"50%\"\n    },\n    deleteHover: {\n      transition: \"0.15s\",\n      \"&:hover\": {\n        color: state.profile.theme === \"light\" ? \"#ff4e5e\" : \"#ff6775\"\n      }\n    },\n    editHover: {\n      transition: \"0.15s\",\n      \"&:hover\": {\n        color: state.profile.theme === \"light\" ? \"#ff7700\" : \"#ff9940\"\n      }\n    },\n    disabled: {\n      cursor: 'not-allowed !important'\n    },\n    note: {\n      margin: \"30px auto 10px\",\n      padding: \"10px 12px\",\n      backgroundColor: state.profile.theme === \"light\" ? \"#efefef\" : \"#424242\",\n      borderLeft: state.profile.theme === \"light\" ? \"4px solid #3f51b5\" : \"4px solid #7f91ff\"\n    },\n    EmptyMessage: {\n      textAlign: \"center\",\n      color: \"#c1c1c1\",\n      marginTop: \"calc((100vh - 65px) / 2)\",\n      transform: \"translateY(-50%)\"\n    }\n  }); // Classes Object\n\n  const classes = useStyles(); // History Hooks\n\n  const history = useHistory(); // Sweet Alert Library\n\n  const MySwal = withReactContent(Swal); // Handle Delete Method\n\n  const handleCategoryDelete = category => {\n    // Confirmation Dialogue\n    MySwal.fire({\n      title: \"Are you sure?\",\n      text: \"All notes assigned to this category, will be assigned to 'Not Categorized'!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#dd3333\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, delete it!\"\n    }).then(result => {\n      if (result.isConfirmed) {\n        // Assign This Category Notes To 'Not Categorized'\n        state.notes.map(note => {\n          // If Current Note Has The Same Deleted Category\n          if (note.category === category.name) {\n            // Update This Note Category To 'Not Categorized'\n            state.update(\"notes\", {\n              id: note.id,\n              title: note.title,\n              body: note.body,\n              category: \"Not Categorized\",\n              favourite: note.favourite\n            });\n          } // Return Nothing\n\n\n          return null;\n        }); // Trigger Note Delete Method\n\n        state.remove(\"categories\", category.id); // Success Dialogue\n\n        MySwal.fire(\"Deleted!\", \"This note has been deleted.\", \"success\");\n      }\n    });\n  }; // View\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      className: classes.tableContainer,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          className: classes.tableHead,\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: // Loop Through All Categories\n          state.categories.map(category => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"category\",\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.categoryColorContainer,\n                style: {\n                  border: `2px solid ${category.name === 'Not Categorized' ? state.profile.theme === 'light' ? '#dedede' : '#303030' : category.color}`\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classes.categoryColor,\n                  style: {\n                    backgroundColor: category.name === 'Not Categorized' ? state.profile.theme === 'light' ? '#dedede' : '#303030' : category.color\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this), // Check Not Categorized Control\n            category.name === \"Not Categorized\" ? /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"inherit\",\n                disabled: true,\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"inherit\",\n                disabled: true,\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"inherit\",\n                className: classes.editHover,\n                onClick: () => history.push(`/update-category/${category.id}`),\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleCategoryDelete(category),\n                color: \"inherit\",\n                className: classes.deleteHover,\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 25\n            }, this)]\n          }, category.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      className: classes.note,\n      children: \"\\\" Not Categorized \\\" category can't be edited or removed, as it is the default category for new notes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}; // Export Component\n\n\n_s(Categories, \"2PbjtoVsH+9R//SJUFAdjA9pujs=\", true, function () {\n  return [useHistory];\n});\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["C:/Users/ranaa/Downloads/smart-notes-master/smart-notes-master/src/pages/Categories.js"],"names":["React","useContext","useHistory","Swal","withReactContent","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Container","IconButton","Typography","Delete","Edit","AppContext","Categories","state","useStyles","tableContainer","marginTop","tableHead","backgroundColor","profile","theme","fontSize","color","categoryColorContainer","display","padding","borderRadius","categoryColor","width","height","deleteHover","transition","editHover","disabled","cursor","note","margin","borderLeft","EmptyMessage","textAlign","transform","classes","history","MySwal","handleCategoryDelete","category","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","notes","map","name","update","id","body","favourite","remove","categories","border","push"],"mappings":"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","sourcesContent":["// Libraries\nimport React, {useContext} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\n// Material UI Components\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\n// Material UI Icons\nimport {Container, IconButton, Typography} from \"@material-ui/core\";\nimport {Delete, Edit} from \"@material-ui/icons\";\n\n// App Context\nimport {AppContext} from \"../contexts/AppContext\";\n\n\n// Component\nconst Categories = () => {\n  // Get Notes & Its Methods\n  const state = useContext(AppContext);\n\n  // Custom CSS Classes Style\n  const useStyles = makeStyles({\n    tableContainer: {\n      marginTop: 20\n    },\n    tableHead: {\n      backgroundColor: state.profile.theme === \"light\" ? \"#3f51b5\" : \"#545454\",\n      \"& > tr th\": {\n        fontSize: 16,\n        color: \"#ffffff\"\n      }\n    },\n    categoryColorContainer: {\n      display: \"inline-block\",\n      padding: 2,\n      borderRadius: \"50%\"\n    },\n    categoryColor: {\n      width: 30,\n      height: 30,\n      display: \"block\",\n      borderRadius: \"50%\"\n    },\n    deleteHover: {\n      transition: \"0.15s\",\n      \"&:hover\": {\n        color: state.profile.theme === \"light\" ? \"#ff4e5e\" : \"#ff6775\"\n      }\n    },\n    editHover: {\n      transition: \"0.15s\",\n      \"&:hover\": {\n        color: state.profile.theme === \"light\" ? \"#ff7700\" : \"#ff9940\"\n      }\n    },\n    disabled: {\n      cursor: 'not-allowed !important'\n    },\n    note: {\n      margin: \"30px auto 10px\",\n      padding: \"10px 12px\",\n      backgroundColor: state.profile.theme === \"light\" ? \"#efefef\" : \"#424242\",\n      borderLeft: state.profile.theme === \"light\" ? \"4px solid #3f51b5\" : \"4px solid #7f91ff\"\n    },\n    EmptyMessage: {\n      textAlign: \"center\",\n      color: \"#c1c1c1\",\n      marginTop: \"calc((100vh - 65px) / 2)\",\n      transform: \"translateY(-50%)\"\n    }\n  });\n\n  // Classes Object\n  const classes = useStyles();\n\n  // History Hooks\n  const history = useHistory();\n\n  // Sweet Alert Library\n  const MySwal = withReactContent(Swal);\n\n  // Handle Delete Method\n  const handleCategoryDelete = (category) => {\n    // Confirmation Dialogue\n    MySwal.fire({\n      title: \"Are you sure?\",\n      text: \"All notes assigned to this category, will be assigned to 'Not Categorized'!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#dd3333\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, delete it!\"\n    }).then((result) => {\n      if (result.isConfirmed) {\n        // Assign This Category Notes To 'Not Categorized'\n        state.notes.map(note => {\n          // If Current Note Has The Same Deleted Category\n          if (note.category === category.name) {\n            // Update This Note Category To 'Not Categorized'\n            state.update(\"notes\", {\n              id: note.id,\n              title: note.title,\n              body: note.body,\n              category: \"Not Categorized\",\n              favourite: note.favourite\n            });\n          }\n          // Return Nothing\n          return null;\n        });\n        // Trigger Note Delete Method\n        state.remove(\"categories\", category.id);\n        // Success Dialogue\n        MySwal.fire(\n          \"Deleted!\",\n          \"This note has been deleted.\",\n          \"success\"\n        );\n      }\n    });\n  };\n\n  // View\n  return (\n    <Container>\n      <TableContainer component={Paper} className={classes.tableContainer}>\n        <Table>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Color</TableCell>\n              <TableCell>Control</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              // Loop Through All Categories\n              state.categories.map((category) => (\n                <TableRow key={category.id}>\n                  <TableCell component=\"th\" scope=\"category\">\n                    {category.name}\n                  </TableCell>\n                  <TableCell>\n                    <div className={classes.categoryColorContainer} style={{\n                      border: `2px solid ${category.name === 'Not Categorized' ? (state.profile.theme === 'light' ? '#dedede' : '#303030') : category.color}`\n                    }}>\n                  <span className={classes.categoryColor}\n                        style={{backgroundColor: category.name === 'Not Categorized' ? (state.profile.theme === 'light' ? '#dedede' : '#303030') : category.color}} />\n                    </div>\n                  </TableCell>\n                  {\n                    // Check Not Categorized Control\n                    category.name === \"Not Categorized\" ?\n                      (\n                        <TableCell>\n                          <IconButton\n                            color=\"inherit\"\n                            disabled\n                          >\n                            <Edit />\n                          </IconButton>\n                          <IconButton\n                            color=\"inherit\"\n                            disabled\n                          >\n                            <Delete />\n                          </IconButton>\n                        </TableCell>\n                      )\n                      : (\n                        <TableCell>\n                          <IconButton\n                            color=\"inherit\"\n                            className={classes.editHover}\n                            onClick={() => history.push(`/update-category/${category.id}`)}\n                          >\n                            <Edit />\n                          </IconButton>\n                          <IconButton\n                            onClick={() => handleCategoryDelete(category)}\n                            color=\"inherit\"\n                            className={classes.deleteHover}\n                          >\n                            <Delete />\n                          </IconButton>\n                        </TableCell>\n                      )\n                  }\n                </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.note}>\n        \" Not Categorized \" category can't be edited or removed, as it is the default category for new notes.\n      </Typography>\n    </Container>\n  );\n};\n\n// Export Component\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}