{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ranaa\\\\Downloads\\\\smart-notes-master\\\\smart-notes-master\\\\src\\\\components\\\\NoteCard.js\",\n    _s = $RefreshSig$();\n\n// Libraries\nimport React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\"; // Material-UI Components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Card, CardContent, CardHeader, IconButton, Menu, MenuItem, Typography } from \"@material-ui/core\";\nimport { Delete, Edit, MoreVertOutlined, Star, StarOutline } from \"@material-ui/icons\"; // Helpers\n\nimport { CheckLightOrDark } from \"../helpers/CheckLightOrDark\"; // App Context\n\nimport { AppContext } from \"../contexts/AppContext\"; // Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteCard = ({\n  note\n}) => {\n  _s();\n\n  // App State\n  const state = useContext(AppContext); // History Hooks\n\n  const history = useHistory(); // Custom CSS Classes Style\n\n  const useStyle = makeStyles({\n    avatarBackground: {\n      backgroundColor: state.profile.theme === \"light\" ? \"#3f51b5\" : \"#7f91ff\"\n    },\n    cardTitle: {\n      fontSize: 16,\n      display: \"block\"\n    },\n    CardBody: {\n      whiteSpace: \"break-spaces\",\n      wordBreak: `break-all`\n    },\n    MenuItemEdit: {\n      transition: \"0.15s\",\n      \"& > svg\": {\n        marginRight: 10\n      },\n      \"&:hover\": {\n        color: state.profile.theme === \"light\" ? \"#ff7700\" : \"#ff9940\"\n      }\n    },\n    MenuItemDelete: {\n      transition: \"0.15s\",\n      \"& > svg\": {\n        marginRight: 10\n      },\n      \"&:hover\": {\n        color: state.profile.theme === \"light\" ? \"#ff4e5e\" : \"#ff6775\"\n      }\n    }\n  }); // Classes Object\n\n  const classes = useStyle(); // Sweet Alert Library\n\n  const MySwal = withReactContent(Swal); // Get Category Background Of This Note\n\n  let categoryBackground; // Loop Through Categories\n\n  state.categories.map(category => {\n    // Check Current Note Category\n    if (category.name === note.category) {\n      // Assign Color To Variable\n      categoryBackground = category.name === 'Not Categorized' ? state.profile.theme === 'light' ? '#dedede' : '#303030' : category.color;\n    } // Return Nothing\n\n\n    return null;\n  }); // Check For Background Color (Dark Or Light Color), To Determine Foreground Color\n\n  let categoryColor = CheckLightOrDark(categoryBackground); // Note Menu Local State\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl); // Handle Menu Element Function\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  }; // Handle Menu Close Function\n\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  }; // Handle Favourite Method\n\n\n  const handleFavourite = note => {\n    // Close Menu\n    handleClose(); // Updated Note Attributes\n\n    let newNote = {\n      id: note.id,\n      title: note.title,\n      body: note.body,\n      category: note.category,\n      favourite: !note.favourite\n    }; // Trigger Update Method\n\n    state.update(\"notes\", newNote);\n  }; // Handle Delete Method\n\n\n  const handleNoteDelete = id => {\n    // Close Menu\n    handleClose(); // Confirmation Dialogue\n\n    MySwal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#dd3333\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, delete it!\"\n    }).then(result => {\n      if (result.isConfirmed) {\n        // Trigger Note Delete Method\n        state.remove(\"notes\", id); // Success Dialogue\n\n        MySwal.fire(\"Deleted!\", \"This note has been deleted.\", \"success\");\n      }\n    });\n  }; // Component View\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 1,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          \"aria-label\": \"recipe\",\n          className: classes.avatarBackground,\n          children: note.title[0].toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this),\n        action: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => handleFavourite(note),\n            color: \"primary\",\n            children: note.favourite === true ? /*#__PURE__*/_jsxDEV(Star, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 46\n            }, this) : /*#__PURE__*/_jsxDEV(StarOutline, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleMenu,\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(MoreVertOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            anchorEl: anchorEl,\n            anchorOrigin: {\n              vertical: \"top\",\n              horizontal: \"right\"\n            },\n            keepMounted: true,\n            transformOrigin: {\n              vertical: \"top\",\n              horizontal: \"right\"\n            },\n            open: open,\n            onClose: handleClose,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              className: classes.MenuItemEdit,\n              onClick: () => history.push(`/update-note/${note.id}`),\n              children: [/*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 116\n              }, this), \" Edit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              className: classes.MenuItemDelete,\n              onClick: () => handleNoteDelete(note.id),\n              children: [/*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 69\n              }, this), \" Delete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this),\n        title: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"span\",\n          className: classes.cardTitle,\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 18\n        }, this),\n        subheader: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            backgroundColor: categoryBackground,\n            color: categoryColor\n          },\n          children: note.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"pre\",\n          color: \"textSecondary\",\n          className: classes.CardBody,\n          dir: \"auto\",\n          children: note.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}; // Export Component\n\n\n_s(NoteCard, \"yRE+p931aIBiP6jVnKe7PBaavos=\", true, function () {\n  return [useHistory];\n});\n\n_c = NoteCard;\nexport default NoteCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteCard\");","map":{"version":3,"sources":["C:/Users/ranaa/Downloads/smart-notes-master/smart-notes-master/src/components/NoteCard.js"],"names":["React","useContext","useState","useHistory","Swal","withReactContent","makeStyles","Avatar","Card","CardContent","CardHeader","IconButton","Menu","MenuItem","Typography","Delete","Edit","MoreVertOutlined","Star","StarOutline","CheckLightOrDark","AppContext","NoteCard","note","state","history","useStyle","avatarBackground","backgroundColor","profile","theme","cardTitle","fontSize","display","CardBody","whiteSpace","wordBreak","MenuItemEdit","transition","marginRight","color","MenuItemDelete","classes","MySwal","categoryBackground","categories","map","category","name","categoryColor","anchorEl","setAnchorEl","open","Boolean","handleMenu","event","currentTarget","handleClose","handleFavourite","newNote","id","title","body","favourite","update","handleNoteDelete","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","remove","toUpperCase","vertical","horizontal","push"],"mappings":"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","sourcesContent":["// Libraries\nimport React, {useContext, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\n// Material-UI Components\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Avatar, Card, CardContent, CardHeader, IconButton, Menu, MenuItem, Typography} from \"@material-ui/core\";\nimport {Delete, Edit, MoreVertOutlined, Star, StarOutline} from \"@material-ui/icons\";\n\n// Helpers\nimport {CheckLightOrDark} from \"../helpers/CheckLightOrDark\";\n\n// App Context\nimport {AppContext} from \"../contexts/AppContext\";\n\n// Component\nconst NoteCard = ({note}) => {\n  // App State\n  const state = useContext(AppContext);\n\n  // History Hooks\n  const history = useHistory();\n\n  // Custom CSS Classes Style\n  const useStyle = makeStyles({\n    avatarBackground: {\n      backgroundColor: state.profile.theme === \"light\" ? \"#3f51b5\" : \"#7f91ff\"\n    },\n    cardTitle: {\n      fontSize: 16,\n      display: \"block\"\n    },\n    CardBody: {\n      whiteSpace: \"break-spaces\",\n      wordBreak: `break-all`\n    },\n    MenuItemEdit: {\n      transition: \"0.15s\",\n      \"& > svg\": {\n        marginRight: 10\n      },\n      \"&:hover\": {\n        color: state.profile.theme === \"light\" ? \"#ff7700\" : \"#ff9940\"\n      }\n    },\n    MenuItemDelete: {\n      transition: \"0.15s\",\n      \"& > svg\": {\n        marginRight: 10\n      },\n      \"&:hover\": {\n        color: state.profile.theme === \"light\" ? \"#ff4e5e\" : \"#ff6775\"\n      }\n    }\n  });\n\n  // Classes Object\n  const classes = useStyle();\n\n  // Sweet Alert Library\n  const MySwal = withReactContent(Swal);\n\n  // Get Category Background Of This Note\n  let categoryBackground;\n  // Loop Through Categories\n  state.categories.map(category => {\n    // Check Current Note Category\n    if (category.name === note.category) {\n      // Assign Color To Variable\n      categoryBackground = category.name === 'Not Categorized' ? (state.profile.theme === 'light' ? '#dedede' : '#303030') : category.color;\n    }\n    // Return Nothing\n    return null;\n  });\n  // Check For Background Color (Dark Or Light Color), To Determine Foreground Color\n  let categoryColor = CheckLightOrDark(categoryBackground);\n\n  // Note Menu Local State\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  // Handle Menu Element Function\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  // Handle Menu Close Function\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  // Handle Favourite Method\n  const handleFavourite = (note) => {\n    // Close Menu\n    handleClose();\n    // Updated Note Attributes\n    let newNote = {\n      id: note.id,\n      title: note.title,\n      body: note.body,\n      category: note.category,\n      favourite: !(note.favourite)\n    };\n    // Trigger Update Method\n    state.update(\"notes\", newNote);\n  };\n\n  // Handle Delete Method\n  const handleNoteDelete = (id) => {\n    // Close Menu\n    handleClose();\n    // Confirmation Dialogue\n    MySwal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#dd3333\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, delete it!\"\n    }).then((result) => {\n      if (result.isConfirmed) {\n        // Trigger Note Delete Method\n        state.remove(\"notes\", id);\n        // Success Dialogue\n        MySwal.fire(\n          \"Deleted!\",\n          \"This note has been deleted.\",\n          \"success\"\n        );\n      }\n    });\n  };\n\n  // Component View\n  return (\n    <div>\n      <Card elevation={1}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatarBackground}>\n              {note.title[0].toUpperCase()}\n            </Avatar>\n          }\n          action={\n            <div>\n              <IconButton\n                onClick={() => handleFavourite(note)}\n                color=\"primary\"\n              >\n                {\n                  note.favourite === true ? (<Star />) : (<StarOutline />)\n                }\n              </IconButton>\n              <IconButton\n                onClick={handleMenu}\n                color=\"primary\"\n              >\n                <MoreVertOutlined />\n              </IconButton>\n              <Menu\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\"\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\"\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem className={classes.MenuItemEdit} onClick={() => history.push(`/update-note/${note.id}`)}><Edit /> Edit</MenuItem>\n                <MenuItem className={classes.MenuItemDelete}\n                          onClick={() => handleNoteDelete(note.id)}><Delete /> Delete</MenuItem>\n              </Menu>\n            </div>\n          }\n          title={<Typography variant=\"body2\" component=\"span\" className={classes.cardTitle}>{note.title}</Typography>}\n          subheader={<Typography component=\"span\"\n                                 style={{\n                                   backgroundColor: categoryBackground,\n                                   color: categoryColor\n                                 }}>{note.category}</Typography>}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" component=\"pre\" color=\"textSecondary\" className={classes.CardBody} dir=\"auto\">\n            {note.body}\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\n// Export Component\nexport default NoteCard;\n"]},"metadata":{},"sourceType":"module"}