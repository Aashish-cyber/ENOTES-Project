{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ranaa\\\\Downloads\\\\smart-notes-master\\\\smart-notes-master\\\\src\\\\pages\\\\UserProfile.js\",\n    _s = $RefreshSig$();\n\n// Libraries\nimport React, { useContext, useState } from \"react\"; // Material UI Components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Button, Container, FormControl, FormLabel, IconButton, MenuItem, Select, Slide, TextField } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\"; // Material UI Icons\n\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\"; // App Context\n\nimport { AppContext } from \"../contexts/AppContext\"; // Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProfile = () => {\n  _s();\n\n  // Get Notes & Its Methods\n  const state = useContext(AppContext); // Component Local State\n\n  const [username, setUsername] = useState(state.profile.username);\n  const [avatar, setAvatar] = useState(state.profile.avatar);\n  const [theme, setTheme] = useState(state.profile.theme);\n  const [usernameErrorState, setUsernameErrorState] = useState(false);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [alertState, setAlertState] = useState(\"\");\n  const [alertMessage, setAlertMessage] = useState(\"\"); // Custom CSS Classes Style\n\n  const useStyles = makeStyles(theme => ({\n    formControl: {\n      marginTop: 20,\n      marginBottom: 30,\n      display: \"block\"\n    },\n    field: {\n      marginTop: 10,\n      marginBottom: 10\n    },\n    select: {\n      marginTop: 20,\n      marginBottom: 20\n    },\n    alertContainer: {\n      width: \"100%\",\n      \"& > * + *\": {\n        marginTop: theme.spacing(2)\n      }\n    },\n    alert: {\n      maxWidth: \"300px\",\n      position: \"absolute\",\n      top: 75,\n      right: 20,\n      backgroundColor: state.profile.theme === \"dark\" ? alertState === \"success\" ? \"#495d49\" : \"#563a38\" : \"\"\n    },\n    avatarsContainer: {\n      paddingTop: 20,\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    avatarContainer: {\n      position: \"relative\"\n    },\n    avatar: {\n      marginRight: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      cursor: \"pointer\"\n    },\n    activeAvatarIcon: {\n      position: \"absolute\",\n      bottom: -13,\n      left: -8,\n      zIndex: 3,\n      color: \"#55cc48\",\n      fontSize: 20\n    }\n  })); // Classes Object\n\n  const classes = useStyles(); // List Of Avatars\n\n  const avatars = [{\n    id: 1,\n    src: `${process.env.PUBLIC_URL}/images/guest.jpg`\n  }, {\n    id: 2,\n    src: `${process.env.PUBLIC_URL}/images/mafia.jpg`\n  }, {\n    id: 3,\n    src: `${process.env.PUBLIC_URL}/images/boy_1.jpg`\n  }, {\n    id: 4,\n    src: `${process.env.PUBLIC_URL}/images/boy_2.jpg`\n  }, {\n    id: 5,\n    src: `${process.env.PUBLIC_URL}/images/boy_3.jpg`\n  }, {\n    id: 6,\n    src: `${process.env.PUBLIC_URL}/images/girl_1.jpg`\n  }, {\n    id: 7,\n    src: `${process.env.PUBLIC_URL}/images/girl_2.jpg`\n  }, {\n    id: 8,\n    src: `${process.env.PUBLIC_URL}/images/girl_3.jpg`\n  }]; // Handle Submit Form Method\n\n  const handleSubmit = e => {\n    // Prevent Default Action For Form Submission\n    e.preventDefault(); // Reset Error State\n\n    setUsernameErrorState(false); // Check If Title Field Empty\n\n    if (username === \"\") {\n      // Set Title Error For Empty\n      setUsernameErrorState(true); // Trigger Error Alert\n\n      triggerAlert(\"error\", \"Username is Required\");\n    } else {\n      // Trigger Success Alert\n      triggerAlert(\"success\", \"Profile Saved Successfully\"); // Save Profile To State\n\n      state.updateProfile({\n        avatar: avatar,\n        username: username.trim(),\n        theme: theme\n      });\n    }\n  }; // Trigger Alert Method\n\n\n  const triggerAlert = (state, message) => {\n    // Set Alert State\n    setAlertState(state); // Set Alert Message\n\n    setAlertMessage(message); // Open Alert\n\n    setOpenAlert(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          color: \"primary\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setUsername(e.target.value),\n          value: username,\n          className: classes.field,\n          color: \"primary\",\n          variant: \"outlined\",\n          fullWidth: true,\n          required: true,\n          error: usernameErrorState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          color: \"primary\",\n          children: \"Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.avatarsContainer,\n          children: // Loop Through All Avatars\n          avatars.map(currentAvatar => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.avatarContainer,\n              children: [// Check If Current Avatar Is Active\n              currentAvatar.src === avatar ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                className: classes.activeAvatarIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 55\n              }, this) : null, /*#__PURE__*/_jsxDEV(Avatar, {\n                src: currentAvatar.src,\n                className: classes.avatar,\n                onClick: e => setAvatar(e.target.getAttribute(\"src\"))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this)]\n            }, currentAvatar.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          color: \"primary\",\n          children: \"Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          fullWidth: true,\n          value: theme,\n          onChange: e => setTheme(e.target.value),\n          variant: \"outlined\",\n          className: classes.select,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"light\",\n            children: \"Light\"\n          }, \"light\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"dark\",\n            children: \"Dark\"\n          }, \"dark\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        endIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowRightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 20\n        }, this),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"left\",\n      in: openAlert,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        className: classes.alert,\n        severity: alertState,\n        action: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          size: \"small\",\n          onClick: () => setOpenAlert(false),\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this),\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}; // Export Component\n\n\n_s(UserProfile, \"bpTbhldrIQT6EZ38LEG8Z1iKYa0=\", true);\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["C:/Users/ranaa/Downloads/smart-notes-master/smart-notes-master/src/pages/UserProfile.js"],"names":["React","useContext","useState","makeStyles","Avatar","Button","Container","FormControl","FormLabel","IconButton","MenuItem","Select","Slide","TextField","Alert","KeyboardArrowRightIcon","CloseIcon","CheckCircleIcon","AppContext","UserProfile","state","username","setUsername","profile","avatar","setAvatar","theme","setTheme","usernameErrorState","setUsernameErrorState","openAlert","setOpenAlert","alertState","setAlertState","alertMessage","setAlertMessage","useStyles","formControl","marginTop","marginBottom","display","field","select","alertContainer","width","spacing","alert","maxWidth","position","top","right","backgroundColor","avatarsContainer","paddingTop","flexWrap","avatarContainer","marginRight","cursor","activeAvatarIcon","bottom","left","zIndex","color","fontSize","classes","avatars","id","src","process","env","PUBLIC_URL","handleSubmit","e","preventDefault","triggerAlert","updateProfile","trim","message","target","value","map","currentAvatar","getAttribute"],"mappings":"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","sourcesContent":["// Libraries\nimport React, {useContext, useState} from \"react\";\n\n// Material UI Components\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {\n  Avatar,\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  IconButton,\n  MenuItem,\n  Select,\n  Slide,\n  TextField\n} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\n\n// Material UI Icons\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\n\n// App Context\nimport {AppContext} from \"../contexts/AppContext\";\n\n// Component\nconst UserProfile = () => {\n  // Get Notes & Its Methods\n  const state = useContext(AppContext);\n\n  // Component Local State\n  const [username, setUsername] = useState(state.profile.username);\n  const [avatar, setAvatar] = useState(state.profile.avatar);\n  const [theme, setTheme] = useState(state.profile.theme);\n  const [usernameErrorState, setUsernameErrorState] = useState(false);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [alertState, setAlertState] = useState(\"\");\n  const [alertMessage, setAlertMessage] = useState(\"\");\n\n  // Custom CSS Classes Style\n  const useStyles = makeStyles(theme => ({\n      formControl: {\n        marginTop: 20,\n        marginBottom: 30,\n        display: \"block\"\n      },\n      field: {\n        marginTop: 10,\n        marginBottom: 10\n      },\n      select: {\n        marginTop: 20,\n        marginBottom: 20\n      },\n      alertContainer: {\n        width: \"100%\",\n        \"& > * + *\": {\n          marginTop: theme.spacing(2)\n        }\n      },\n      alert: {\n        maxWidth: \"300px\",\n        position: \"absolute\",\n        top: 75,\n        right: 20,\n        backgroundColor: state.profile.theme === \"dark\" ? (alertState === \"success\" ? \"#495d49\" : \"#563a38\") : \"\"\n      },\n      avatarsContainer: {\n        paddingTop: 20,\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n\n      avatarContainer: {\n        position: \"relative\"\n      },\n      avatar: {\n        marginRight: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        cursor: \"pointer\"\n      },\n      activeAvatarIcon: {\n        position: \"absolute\",\n        bottom: -13,\n        left: -8,\n        zIndex: 3,\n        color: \"#55cc48\",\n        fontSize: 20\n      }\n    }\n  ));\n\n  // Classes Object\n  const classes = useStyles();\n\n  // List Of Avatars\n  const avatars = [\n    {\n      id: 1,\n      src: `${process.env.PUBLIC_URL}/images/guest.jpg`\n    },\n    {\n      id: 2,\n      src: `${process.env.PUBLIC_URL}/images/mafia.jpg`\n    },\n    {\n      id: 3,\n      src: `${process.env.PUBLIC_URL}/images/boy_1.jpg`\n    },\n    {\n      id: 4,\n      src: `${process.env.PUBLIC_URL}/images/boy_2.jpg`\n    },\n    {\n      id: 5,\n      src: `${process.env.PUBLIC_URL}/images/boy_3.jpg`\n    },\n    {\n      id: 6,\n      src: `${process.env.PUBLIC_URL}/images/girl_1.jpg`\n    },\n    {\n      id: 7,\n      src: `${process.env.PUBLIC_URL}/images/girl_2.jpg`\n    },\n    {\n      id: 8,\n      src: `${process.env.PUBLIC_URL}/images/girl_3.jpg`\n    }\n\n  ];\n\n  // Handle Submit Form Method\n  const handleSubmit = (e) => {\n    // Prevent Default Action For Form Submission\n    e.preventDefault();\n    // Reset Error State\n    setUsernameErrorState(false);\n    // Check If Title Field Empty\n    if (username === \"\") {\n      // Set Title Error For Empty\n      setUsernameErrorState(true);\n      // Trigger Error Alert\n      triggerAlert(\"error\", \"Username is Required\");\n    } else {\n      // Trigger Success Alert\n      triggerAlert(\"success\", \"Profile Saved Successfully\");\n      // Save Profile To State\n      state.updateProfile({\n        avatar: avatar,\n        username: username.trim(),\n        theme: theme\n      });\n    }\n  };\n\n  // Trigger Alert Method\n  const triggerAlert = (state, message) => {\n    // Set Alert State\n    setAlertState(state);\n    // Set Alert Message\n    setAlertMessage(message);\n    // Open Alert\n    setOpenAlert(true);\n  };\n\n  return (\n    <Container>\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <FormControl className={classes.formControl}>\n          <FormLabel color=\"primary\">Username</FormLabel>\n          <TextField\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n            className={classes.field}\n            color=\"primary\"\n            variant=\"outlined\"\n            fullWidth\n            required\n            error={usernameErrorState}\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <FormLabel color=\"primary\">Avatar</FormLabel>\n          <div className={classes.avatarsContainer}>\n            {\n              // Loop Through All Avatars\n              avatars.map(currentAvatar => {\n                return (\n                  <div key={currentAvatar.id} className={classes.avatarContainer}>\n                    {\n                      // Check If Current Avatar Is Active\n                      currentAvatar.src === avatar ? (<CheckCircleIcon className={classes.activeAvatarIcon} />) : null\n                    }\n                    <Avatar src={currentAvatar.src}\n                            className={classes.avatar}\n                            onClick={(e) => setAvatar(e.target.getAttribute(\"src\"))}\n                    />\n                  </div>\n                );\n              })\n            }\n          </div>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <FormLabel color=\"primary\">Theme</FormLabel>\n          <Select\n            fullWidth\n            value={theme}\n            onChange={(e) => setTheme(e.target.value)}\n            variant=\"outlined\"\n            className={classes.select}\n          >\n            <MenuItem key=\"light\" value=\"light\">Light</MenuItem>\n            <MenuItem key=\"dark\" value=\"dark\">Dark</MenuItem>\n          </Select>\n        </FormControl>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          endIcon={<KeyboardArrowRightIcon />}\n        >\n          Save\n        </Button>\n      </form>\n      <Slide direction=\"left\" in={openAlert} mountOnEnter unmountOnExit>\n        <Alert\n          className={classes.alert}\n          severity={alertState}\n          action={\n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={() => setOpenAlert(false)}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n        >\n          {alertMessage}\n        </Alert>\n      </Slide>\n    </Container>\n  );\n};\n\n// Export Component\nexport default UserProfile;\n"]},"metadata":{},"sourceType":"module"}